/*
 * Copyright (c) 2025 lax1dude. All Rights Reserved.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 */

package net.lax1dude.eaglercraft.backend.server.adapter;

import io.netty.channel.ChannelHandler;

public interface IPipelineComponent {

	public static enum EnumPipelineComponent {
		FRAME_DECODER, VIA_DECODER, MINECRAFT_DECODER, FRAME_ENCODER, VIA_ENCODER, MINECRAFT_ENCODER,
		READ_TIMEOUT_HANDLER, HAPROXY_HANDLER, BUKKIT_LEGACY_HANDLER, BUNGEE_LEGACY_HANDLER, BUNGEE_LEGACY_KICK_ENCODER,
		VELOCITY_LEGACY_PING_ENCODER, PROTOCOLLIB_INBOUND_INTERCEPTOR, PROTOCOLLIB_PROTOCOL_GETTER_NAME,
		PROTOCOLLIB_WIRE_PACKET_ENCODER, PROTOCOLIZE_DECODER, PROTOCOLIZE_ENCODER, PACKETEVENTS_ENCODER,
		PACKETEVENTS_DECODER, PACKETEVENTS_TIMEOUT_HANDLER, INBOUND_PACKET_HANDLER, UNIDENTIFIED;
	}

	EnumPipelineComponent getIdentifiedType();

	String getName();

	ChannelHandler getHandle();

}
